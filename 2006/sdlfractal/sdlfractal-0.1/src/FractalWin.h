// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef FractalWin_h
#define FractalWin_h
#include <FL/Fl.H>
#include "FractalUi.h"
#include <FL/Fl_Window.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Button.H>

class FractalWin : public FractalUi {
public:
  FractalWin();
  Fl_Window *WMain;
private:
  void cb_WMain_i(Fl_Window*, void*);
  static void cb_WMain(Fl_Window*, void*);
public:
  Fl_Tabs *Tabs0;
private:
  void cb_Tabs0_i(Fl_Tabs*, long);
  static void cb_Tabs0(Fl_Tabs*, long);
public:
  Fl_Choice *cb_mandelbrot_colorscheme;
private:
  void cb_cb_mandelbrot_colorscheme_i(Fl_Choice*, void*);
  static void cb_cb_mandelbrot_colorscheme(Fl_Choice*, void*);
public:
  Fl_Value_Input *vi_mandelbrot_numcolor;
private:
  void cb_vi_mandelbrot_numcolor_i(Fl_Value_Input*, void*);
  static void cb_vi_mandelbrot_numcolor(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_mandelbrot_maxsquarenorm;
private:
  void cb_vi_mandelbrot_maxsquarenorm_i(Fl_Value_Input*, void*);
  static void cb_vi_mandelbrot_maxsquarenorm(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_mira_a;
private:
  void cb_vi_mira_a_i(Fl_Value_Input*, void*);
  static void cb_vi_mira_a(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_mira_b;
private:
  void cb_vi_mira_b_i(Fl_Value_Input*, void*);
  static void cb_vi_mira_b(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_mira_iterations;
private:
  void cb_vi_mira_iterations_i(Fl_Value_Input*, void*);
  static void cb_vi_mira_iterations(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_mira_drawoffset;
private:
  void cb_vi_mira_drawoffset_i(Fl_Value_Input*, void*);
  static void cb_vi_mira_drawoffset(Fl_Value_Input*, void*);
public:
  Fl_Tabs *Tabs1;
private:
  void cb_Tabs1_i(Fl_Tabs*, long);
  static void cb_Tabs1(Fl_Tabs*, long);
public:
  Fl_Value_Input *vi_hfractal_order;
private:
  void cb_vi_hfractal_order_i(Fl_Value_Input*, void*);
  static void cb_vi_hfractal_order(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_pythagorastree_order;
private:
  void cb_vi_pythagorastree_order_i(Fl_Value_Input*, void*);
  static void cb_vi_pythagorastree_order(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *vi_sierpinski_order;
private:
  void cb_vi_sierpinski_order_i(Fl_Value_Input*, void*);
  static void cb_vi_sierpinski_order(Fl_Value_Input*, void*);
public:
  Fl_Button *button_savepng;
private:
  void cb_button_savepng_i(Fl_Button*, void*);
  static void cb_button_savepng(Fl_Button*, void*);
public:
  Fl_Value_Input *vi_pngwidth;
private:
  void cb_Redraw_i(Fl_Button*, void*);
  static void cb_Redraw(Fl_Button*, void*);
public:
  void UpdateValues();
};
#endif
